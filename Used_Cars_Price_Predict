{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":2112565,"sourceType":"datasetVersion","datasetId":1267486}],"dockerImageVersionId":30698,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"## Used Cars Price Prediction India","metadata":{}},{"cell_type":"markdown","source":"Our main Motive isto Analyze the Used Cars Dataset, found the key points from our data analysis and Create a Prediction Model to Predict the Prices of Used Cars on the basis of given factors/data or say given features in the dataset.","metadata":{}},{"cell_type":"markdown","source":"### About the Data","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:35.812668Z","iopub.execute_input":"2024-04-19T08:13:35.813346Z","iopub.status.idle":"2024-04-19T08:13:38.41122Z","shell.execute_reply.started":"2024-04-19T08:13:35.813301Z","shell.execute_reply":"2024-04-19T08:13:38.410168Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df= pd.read_csv(\"/kaggle/input/cars4u/used_cars_data.csv\")\ndf","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:38.412796Z","iopub.execute_input":"2024-04-19T08:13:38.413223Z","iopub.status.idle":"2024-04-19T08:13:38.495517Z","shell.execute_reply.started":"2024-04-19T08:13:38.413195Z","shell.execute_reply":"2024-04-19T08:13:38.49452Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:38.496789Z","iopub.execute_input":"2024-04-19T08:13:38.497081Z","iopub.status.idle":"2024-04-19T08:13:38.527627Z","shell.execute_reply.started":"2024-04-19T08:13:38.497055Z","shell.execute_reply":"2024-04-19T08:13:38.526236Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Let's familarize our data features:\n\n1. **S.No** - Serial Number for the records\n2. **Name** - Name of the Cars (Brand Names and Model Names)\n3. **Location** - Location from where that particular car belongs to\n4. **Year** - Bought Year\n5. **Kilometers_Driven** - kms driven by the car till now\n6. **Fuel_Type** - Fuel Type of the car(Petrol/Diesel/etc)\n7. **Transmission**-A car's transmission, also known as a gearbox. It can be automatic or manual\n8. **Owner** - Whether the car is the first owned or pre owned used car\n9. **Mileage**- Mileage of the car\n10. **Engine**- Engine of the car in CC\n11. **Power**- Power/Horse Power of the car it creates\n12. **Seats**- Number of seats in the car\n13. **New_Price** - The On Road Price of the same New Car in the Market\n14. **Price**- The Selling Price of the Car in the Market in Lakhs","metadata":{}},{"cell_type":"markdown","source":"The Price can be the selling Price of the car and new price can be the currently the price of same car on road if you buy.","metadata":{}},{"cell_type":"code","source":"df['Price'].value_counts()\ndf['Price'].nunique()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:38.531162Z","iopub.execute_input":"2024-04-19T08:13:38.531517Z","iopub.status.idle":"2024-04-19T08:13:38.54204Z","shell.execute_reply.started":"2024-04-19T08:13:38.531448Z","shell.execute_reply":"2024-04-19T08:13:38.540698Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['New_Price'].value_counts()\ndf['New_Price'].nunique()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:38.543715Z","iopub.execute_input":"2024-04-19T08:13:38.544131Z","iopub.status.idle":"2024-04-19T08:13:38.553911Z","shell.execute_reply.started":"2024-04-19T08:13:38.544094Z","shell.execute_reply":"2024-04-19T08:13:38.552861Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.shape\n\n### Our dataset contains 7253 records with 14 features/columns.","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:38.555704Z","iopub.execute_input":"2024-04-19T08:13:38.556602Z","iopub.status.idle":"2024-04-19T08:13:38.564567Z","shell.execute_reply.started":"2024-04-19T08:13:38.556568Z","shell.execute_reply":"2024-04-19T08:13:38.563703Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Cleaning of Data","metadata":{}},{"cell_type":"markdown","source":"#### Let's first check the Data Type ","metadata":{}},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:38.565421Z","iopub.execute_input":"2024-04-19T08:13:38.566442Z","iopub.status.idle":"2024-04-19T08:13:38.587335Z","shell.execute_reply.started":"2024-04-19T08:13:38.566406Z","shell.execute_reply":"2024-04-19T08:13:38.586148Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### Mileage","metadata":{}},{"cell_type":"code","source":"def mileage_func(x):\n    x=str(x)\n    if 'kmpl' in x:\n        return float(x[:-5])\n    elif 'km/kg' in x:\n        return float(x[:-6])*1.4   ### To convert km/kg in kmpl unit\n    else:\n        try:\n            return float(x)\n        except:\n            return None","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:38.588757Z","iopub.execute_input":"2024-04-19T08:13:38.589098Z","iopub.status.idle":"2024-04-19T08:13:38.596087Z","shell.execute_reply.started":"2024-04-19T08:13:38.589067Z","shell.execute_reply":"2024-04-19T08:13:38.594829Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Mileage']= df['Mileage'].apply(lambda x: mileage_func(x))\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:38.597875Z","iopub.execute_input":"2024-04-19T08:13:38.598203Z","iopub.status.idle":"2024-04-19T08:13:38.629899Z","shell.execute_reply.started":"2024-04-19T08:13:38.598174Z","shell.execute_reply":"2024-04-19T08:13:38.628744Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Engine","metadata":{}},{"cell_type":"code","source":"\ndf['Engine'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:38.6343Z","iopub.execute_input":"2024-04-19T08:13:38.634675Z","iopub.status.idle":"2024-04-19T08:13:38.646146Z","shell.execute_reply.started":"2024-04-19T08:13:38.634644Z","shell.execute_reply":"2024-04-19T08:13:38.645006Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def engine_func(x):\n    x= str(x)\n    if 'CC' in x:\n        return int(x[:-3])\n    # else:\n    #     try:\n    #         return int(x)\n    #     except:\n    #         return None","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:38.647423Z","iopub.execute_input":"2024-04-19T08:13:38.64783Z","iopub.status.idle":"2024-04-19T08:13:38.655247Z","shell.execute_reply.started":"2024-04-19T08:13:38.647802Z","shell.execute_reply":"2024-04-19T08:13:38.654335Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Engine']=df['Engine'].apply(lambda x: engine_func(x))\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:38.656861Z","iopub.execute_input":"2024-04-19T08:13:38.657235Z","iopub.status.idle":"2024-04-19T08:13:38.692832Z","shell.execute_reply.started":"2024-04-19T08:13:38.657206Z","shell.execute_reply":"2024-04-19T08:13:38.691683Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Power","metadata":{}},{"cell_type":"code","source":"# df.Power.unique()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:38.694096Z","iopub.execute_input":"2024-04-19T08:13:38.694398Z","iopub.status.idle":"2024-04-19T08:13:38.699006Z","shell.execute_reply.started":"2024-04-19T08:13:38.694371Z","shell.execute_reply":"2024-04-19T08:13:38.697988Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def power_func(x):\n    x=str(x)\n    if x=='null bhp':\n        return 0.0      ## I will change the null string values with value 0 for now\n    if 'bhp' in x:\n        return float(x[:-4])\n    # else:\n    #     try:\n    #         return x\n    #     except:\n    #         return None","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:38.700374Z","iopub.execute_input":"2024-04-19T08:13:38.700714Z","iopub.status.idle":"2024-04-19T08:13:38.71024Z","shell.execute_reply.started":"2024-04-19T08:13:38.700686Z","shell.execute_reply":"2024-04-19T08:13:38.709315Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Power']= df['Power'].apply(lambda x: power_func(x))\n### I will be changing the datatype of Power column after handling the Nan Values.","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:38.711665Z","iopub.execute_input":"2024-04-19T08:13:38.712313Z","iopub.status.idle":"2024-04-19T08:13:38.731014Z","shell.execute_reply.started":"2024-04-19T08:13:38.712281Z","shell.execute_reply":"2024-04-19T08:13:38.730026Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Power'].isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:38.732272Z","iopub.execute_input":"2024-04-19T08:13:38.733294Z","iopub.status.idle":"2024-04-19T08:13:38.746662Z","shell.execute_reply.started":"2024-04-19T08:13:38.73326Z","shell.execute_reply":"2024-04-19T08:13:38.745712Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### New Price","metadata":{}},{"cell_type":"code","source":"df.New_Price.value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:38.748291Z","iopub.execute_input":"2024-04-19T08:13:38.749002Z","iopub.status.idle":"2024-04-19T08:13:38.760766Z","shell.execute_reply.started":"2024-04-19T08:13:38.748961Z","shell.execute_reply":"2024-04-19T08:13:38.759521Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"a=df.New_Price.isnull().sum()\nb=df.New_Price.notna().sum()\nab= pd.Series({'Null':a,'Not Null':b})\nlabel=list(ab.index)\nplt.pie(ab,labels=label,autopct='%.2f%%')\nplt.title('New Price Null/Not Null Values Distribution')\nplt.legend()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:38.762461Z","iopub.execute_input":"2024-04-19T08:13:38.763044Z","iopub.status.idle":"2024-04-19T08:13:39.022204Z","shell.execute_reply.started":"2024-04-19T08:13:38.763012Z","shell.execute_reply":"2024-04-19T08:13:39.020368Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**For New Price we have a lot of Nan Values. The Distribution of Null Values contains more than 86% of the whole New_Price feature Data. So Removing this feature will be better for us as we are also going to focus on Price Feature of Cars for Model Creation also.**","metadata":{}},{"cell_type":"code","source":"df.drop(['New_Price'], inplace=True, axis=1)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:39.024845Z","iopub.execute_input":"2024-04-19T08:13:39.025911Z","iopub.status.idle":"2024-04-19T08:13:39.039023Z","shell.execute_reply.started":"2024-04-19T08:13:39.025847Z","shell.execute_reply":"2024-04-19T08:13:39.036413Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:39.041552Z","iopub.execute_input":"2024-04-19T08:13:39.042566Z","iopub.status.idle":"2024-04-19T08:13:39.061316Z","shell.execute_reply.started":"2024-04-19T08:13:39.042509Z","shell.execute_reply":"2024-04-19T08:13:39.060337Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### Now Let's see if our features have any Unjustifyed values like 0. I will converting them to Null values if there are any","metadata":{}},{"cell_type":"code","source":"def hidden_func(df):\n    d= pd.DataFrame(index=df.columns)\n    d['0_count']=df[df==0].count()\n    d['str_0_count']=df[df=='0.0'].count()\n    d['space_count']=df[df==' '].count()\n    d['null_count']=df.isnull().sum()\n    return d\n    \nhidden_func(df)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:39.064083Z","iopub.execute_input":"2024-04-19T08:13:39.064839Z","iopub.status.idle":"2024-04-19T08:13:39.211072Z","shell.execute_reply.started":"2024-04-19T08:13:39.064794Z","shell.execute_reply":"2024-04-19T08:13:39.209906Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.loc[df['Mileage']==0, 'Mileage']=np.nan\ndf.loc[df['Power']==0,'Power']=np.nan\ndf.loc[df['Seats']==0.0,'Seats']=np.nan","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:39.213327Z","iopub.execute_input":"2024-04-19T08:13:39.213684Z","iopub.status.idle":"2024-04-19T08:13:39.222577Z","shell.execute_reply.started":"2024-04-19T08:13:39.213655Z","shell.execute_reply":"2024-04-19T08:13:39.221422Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"hidden_func(df)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:39.224253Z","iopub.execute_input":"2024-04-19T08:13:39.224958Z","iopub.status.idle":"2024-04-19T08:13:39.286499Z","shell.execute_reply.started":"2024-04-19T08:13:39.224917Z","shell.execute_reply":"2024-04-19T08:13:39.285702Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df[df['Seats']==0.0]","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:39.28762Z","iopub.execute_input":"2024-04-19T08:13:39.288576Z","iopub.status.idle":"2024-04-19T08:13:39.300062Z","shell.execute_reply.started":"2024-04-19T08:13:39.288543Z","shell.execute_reply":"2024-04-19T08:13:39.298958Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### NULL Values","metadata":{}},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:39.301559Z","iopub.execute_input":"2024-04-19T08:13:39.301999Z","iopub.status.idle":"2024-04-19T08:13:39.327501Z","shell.execute_reply.started":"2024-04-19T08:13:39.301962Z","shell.execute_reply":"2024-04-19T08:13:39.326319Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:39.329103Z","iopub.execute_input":"2024-04-19T08:13:39.329449Z","iopub.status.idle":"2024-04-19T08:13:39.343302Z","shell.execute_reply.started":"2024-04-19T08:13:39.329421Z","shell.execute_reply":"2024-04-19T08:13:39.342295Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"## Mileage\ndf[df['Mileage'].isnull()]","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:39.344747Z","iopub.execute_input":"2024-04-19T08:13:39.34566Z","iopub.status.idle":"2024-04-19T08:13:39.372223Z","shell.execute_reply.started":"2024-04-19T08:13:39.345627Z","shell.execute_reply":"2024-04-19T08:13:39.371022Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"### Let's fill the values with Random Sample Imputation\ndef random_func(df,x):\n    df[x+'random']=df[x]\n    random_samp=df[x].dropna().sample(df[x].isnull().sum(), random_state=0)\n    random_samp.index=df[df[x].isnull()].index\n    df.loc[df[x].isnull(),x+'random']=random_samp\n    df[x].plot(kind='kde')\n    df[x+'random'].plot(kind='kde', alpha=0.6, color='yellow')\n    plt.legend()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:39.381705Z","iopub.execute_input":"2024-04-19T08:13:39.382372Z","iopub.status.idle":"2024-04-19T08:13:39.389518Z","shell.execute_reply.started":"2024-04-19T08:13:39.382337Z","shell.execute_reply":"2024-04-19T08:13:39.388515Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"random_func(df,'Mileage')","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:39.391446Z","iopub.execute_input":"2024-04-19T08:13:39.392459Z","iopub.status.idle":"2024-04-19T08:13:40.145938Z","shell.execute_reply.started":"2024-04-19T08:13:39.392307Z","shell.execute_reply":"2024-04-19T08:13:40.144852Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"There is near to 0 changes after replacing our Null Values. So we are good to go","metadata":{}},{"cell_type":"code","source":"df['Mileage']=df['Mileagerandom']\ndf.drop('Mileagerandom',inplace=True, axis=1)\ndf.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:40.147569Z","iopub.execute_input":"2024-04-19T08:13:40.148684Z","iopub.status.idle":"2024-04-19T08:13:40.165808Z","shell.execute_reply.started":"2024-04-19T08:13:40.148633Z","shell.execute_reply":"2024-04-19T08:13:40.164717Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"## Power\ndf[df.Power.isnull()].head()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:40.167112Z","iopub.execute_input":"2024-04-19T08:13:40.167498Z","iopub.status.idle":"2024-04-19T08:13:40.189671Z","shell.execute_reply.started":"2024-04-19T08:13:40.167415Z","shell.execute_reply":"2024-04-19T08:13:40.188556Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"random_func(df,'Power')","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:40.19115Z","iopub.execute_input":"2024-04-19T08:13:40.191955Z","iopub.status.idle":"2024-04-19T08:13:40.89832Z","shell.execute_reply.started":"2024-04-19T08:13:40.191915Z","shell.execute_reply":"2024-04-19T08:13:40.897207Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**As we can see there is near to no changes in Power feature and Power Random Imputation feature. Hence we will keep the Powerrandom feature as our Power feature**","metadata":{}},{"cell_type":"code","source":"df['Power']=df['Powerrandom']\ndf.drop(['Powerrandom'], axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:40.899458Z","iopub.execute_input":"2024-04-19T08:13:40.899908Z","iopub.status.idle":"2024-04-19T08:13:40.908009Z","shell.execute_reply.started":"2024-04-19T08:13:40.899879Z","shell.execute_reply":"2024-04-19T08:13:40.906579Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"### Here for Engine and Seats the Missingness of Data seems to be MCAR. I will be implementing Random Sample Imputation for them also.","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:40.90957Z","iopub.execute_input":"2024-04-19T08:13:40.90992Z","iopub.status.idle":"2024-04-19T08:13:40.916832Z","shell.execute_reply.started":"2024-04-19T08:13:40.90989Z","shell.execute_reply":"2024-04-19T08:13:40.915766Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"random_func(df,'Engine')","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:40.918402Z","iopub.execute_input":"2024-04-19T08:13:40.918897Z","iopub.status.idle":"2024-04-19T08:13:41.632166Z","shell.execute_reply.started":"2024-04-19T08:13:40.918868Z","shell.execute_reply":"2024-04-19T08:13:41.630714Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"random_func(df,'Seats')","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:41.633704Z","iopub.execute_input":"2024-04-19T08:13:41.634076Z","iopub.status.idle":"2024-04-19T08:13:42.359912Z","shell.execute_reply.started":"2024-04-19T08:13:41.634027Z","shell.execute_reply":"2024-04-19T08:13:42.358706Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Engine']=df['Enginerandom']\ndf['Seats']=df['Seatsrandom']\ndf.drop(['Enginerandom','Seatsrandom'], axis=1, inplace=True)\n# df.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:42.361166Z","iopub.execute_input":"2024-04-19T08:13:42.361493Z","iopub.status.idle":"2024-04-19T08:13:42.371027Z","shell.execute_reply.started":"2024-04-19T08:13:42.361444Z","shell.execute_reply":"2024-04-19T08:13:42.369669Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:42.373399Z","iopub.execute_input":"2024-04-19T08:13:42.373945Z","iopub.status.idle":"2024-04-19T08:13:42.390249Z","shell.execute_reply.started":"2024-04-19T08:13:42.373905Z","shell.execute_reply":"2024-04-19T08:13:42.389069Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"## Price","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:42.394151Z","iopub.execute_input":"2024-04-19T08:13:42.394486Z","iopub.status.idle":"2024-04-19T08:13:42.398904Z","shell.execute_reply.started":"2024-04-19T08:13:42.394438Z","shell.execute_reply":"2024-04-19T08:13:42.397523Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df[df['Price'].isnull()]","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:42.400763Z","iopub.execute_input":"2024-04-19T08:13:42.401073Z","iopub.status.idle":"2024-04-19T08:13:42.434969Z","shell.execute_reply.started":"2024-04-19T08:13:42.401046Z","shell.execute_reply":"2024-04-19T08:13:42.433907Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"random_func(df,'Price')","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:42.436628Z","iopub.execute_input":"2024-04-19T08:13:42.437633Z","iopub.status.idle":"2024-04-19T08:13:43.149845Z","shell.execute_reply.started":"2024-04-19T08:13:42.437599Z","shell.execute_reply":"2024-04-19T08:13:43.148009Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Price']=df['Pricerandom']\ndf.drop('Pricerandom', axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:43.152411Z","iopub.execute_input":"2024-04-19T08:13:43.152888Z","iopub.status.idle":"2024-04-19T08:13:43.16327Z","shell.execute_reply.started":"2024-04-19T08:13:43.152847Z","shell.execute_reply":"2024-04-19T08:13:43.161371Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:43.165422Z","iopub.execute_input":"2024-04-19T08:13:43.165871Z","iopub.status.idle":"2024-04-19T08:13:43.189693Z","shell.execute_reply.started":"2024-04-19T08:13:43.165828Z","shell.execute_reply":"2024-04-19T08:13:43.187633Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Removing S.No Coloumn. Not required","metadata":{}},{"cell_type":"code","source":"df.drop('S.No.', inplace=True, axis=1)\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:43.191098Z","iopub.execute_input":"2024-04-19T08:13:43.191574Z","iopub.status.idle":"2024-04-19T08:13:43.216441Z","shell.execute_reply.started":"2024-04-19T08:13:43.191526Z","shell.execute_reply":"2024-04-19T08:13:43.215368Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### I will be keeping the Brand Name and Name of the Car. Needing the whole Brand and Model name is not required","metadata":{}},{"cell_type":"code","source":"df['Name']=df['Name'].apply(lambda x: ' '.join(x.split()[:2]))\ndf['Name'].nunique()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:43.218134Z","iopub.execute_input":"2024-04-19T08:13:43.218602Z","iopub.status.idle":"2024-04-19T08:13:43.237767Z","shell.execute_reply.started":"2024-04-19T08:13:43.218561Z","shell.execute_reply":"2024-04-19T08:13:43.23659Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Outliers","metadata":{}},{"cell_type":"code","source":"len(df)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:43.239233Z","iopub.execute_input":"2024-04-19T08:13:43.23957Z","iopub.status.idle":"2024-04-19T08:13:43.247861Z","shell.execute_reply.started":"2024-04-19T08:13:43.239544Z","shell.execute_reply":"2024-04-19T08:13:43.246757Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def outliers_func(df, col):\n    upper_lim = round(df[col].mean() + 3*df[col].std(),4)\n    lower_lim= round(df[col].mean() - 3*df[col].std(),4)\n# print(upper_lim , lower_lim)\n    df=df[(df[col]<upper_lim) & (df[col]>lower_lim)]\n    return df","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:43.249341Z","iopub.execute_input":"2024-04-19T08:13:43.249671Z","iopub.status.idle":"2024-04-19T08:13:43.259585Z","shell.execute_reply.started":"2024-04-19T08:13:43.249642Z","shell.execute_reply":"2024-04-19T08:13:43.258511Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"### Price Outliers\ndf= outliers_func(df,'Price')","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:43.260941Z","iopub.execute_input":"2024-04-19T08:13:43.261251Z","iopub.status.idle":"2024-04-19T08:13:43.277175Z","shell.execute_reply.started":"2024-04-19T08:13:43.261225Z","shell.execute_reply":"2024-04-19T08:13:43.276087Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"len(df)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:43.279025Z","iopub.execute_input":"2024-04-19T08:13:43.279502Z","iopub.status.idle":"2024-04-19T08:13:43.288313Z","shell.execute_reply.started":"2024-04-19T08:13:43.279376Z","shell.execute_reply":"2024-04-19T08:13:43.287228Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"## Power\ndf = outliers_func(df,'Power')\nlen(df)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:43.290043Z","iopub.execute_input":"2024-04-19T08:13:43.290431Z","iopub.status.idle":"2024-04-19T08:13:43.30296Z","shell.execute_reply.started":"2024-04-19T08:13:43.290396Z","shell.execute_reply":"2024-04-19T08:13:43.301836Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"## Engine\ndf = outliers_func(df,'Engine')\nlen(df)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:43.304462Z","iopub.execute_input":"2024-04-19T08:13:43.305259Z","iopub.status.idle":"2024-04-19T08:13:43.316391Z","shell.execute_reply.started":"2024-04-19T08:13:43.305219Z","shell.execute_reply":"2024-04-19T08:13:43.315249Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:43.318005Z","iopub.execute_input":"2024-04-19T08:13:43.318683Z","iopub.status.idle":"2024-04-19T08:13:43.339365Z","shell.execute_reply.started":"2024-04-19T08:13:43.318641Z","shell.execute_reply":"2024-04-19T08:13:43.338237Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"## Mileage\ndf = outliers_func(df,'Mileage')\nlen(df)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:43.341053Z","iopub.execute_input":"2024-04-19T08:13:43.341823Z","iopub.status.idle":"2024-04-19T08:13:43.351881Z","shell.execute_reply.started":"2024-04-19T08:13:43.341788Z","shell.execute_reply":"2024-04-19T08:13:43.350601Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"## Km Driven\ndf = outliers_func(df,'Kilometers_Driven')\nlen(df)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:43.353382Z","iopub.execute_input":"2024-04-19T08:13:43.353766Z","iopub.status.idle":"2024-04-19T08:13:43.364416Z","shell.execute_reply.started":"2024-04-19T08:13:43.353734Z","shell.execute_reply":"2024-04-19T08:13:43.363167Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"## Year\n\ndf= outliers_func(df,'Year')\nlen(df)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:43.366195Z","iopub.execute_input":"2024-04-19T08:13:43.366893Z","iopub.status.idle":"2024-04-19T08:13:43.383708Z","shell.execute_reply.started":"2024-04-19T08:13:43.366821Z","shell.execute_reply":"2024-04-19T08:13:43.382339Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"upper_lim = round(df['Seats'].mean() + 3*df['Seats'].std(),4)\nlower_lim= round(df['Seats'].mean() - 3*df['Seats'].std(),4)\nprint(upper_lim , lower_lim)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:43.385424Z","iopub.execute_input":"2024-04-19T08:13:43.386234Z","iopub.status.idle":"2024-04-19T08:13:43.39662Z","shell.execute_reply.started":"2024-04-19T08:13:43.386188Z","shell.execute_reply":"2024-04-19T08:13:43.395549Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df=df[df['Seats']<=8]\nlen(df)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:43.398582Z","iopub.execute_input":"2024-04-19T08:13:43.399554Z","iopub.status.idle":"2024-04-19T08:13:43.410337Z","shell.execute_reply.started":"2024-04-19T08:13:43.399502Z","shell.execute_reply":"2024-04-19T08:13:43.409556Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Seats'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:43.412565Z","iopub.execute_input":"2024-04-19T08:13:43.413311Z","iopub.status.idle":"2024-04-19T08:13:43.423432Z","shell.execute_reply.started":"2024-04-19T08:13:43.413268Z","shell.execute_reply":"2024-04-19T08:13:43.42257Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### Seats Feature is more kind of Discrete Feature containing specific values. I will not be removing Seats feature Outliers.","metadata":{}},{"cell_type":"markdown","source":"## Exploratory Data Analysis","metadata":{}},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:43.42514Z","iopub.execute_input":"2024-04-19T08:13:43.425767Z","iopub.status.idle":"2024-04-19T08:13:43.450025Z","shell.execute_reply.started":"2024-04-19T08:13:43.425735Z","shell.execute_reply":"2024-04-19T08:13:43.448762Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### Univariate Data analysis","metadata":{}},{"cell_type":"code","source":"## Name\ndf['BrandName']=df['Name'].apply(lambda x: ' '.join(x.split()[:1]))\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:43.451627Z","iopub.execute_input":"2024-04-19T08:13:43.452069Z","iopub.status.idle":"2024-04-19T08:13:43.490433Z","shell.execute_reply.started":"2024-04-19T08:13:43.45202Z","shell.execute_reply":"2024-04-19T08:13:43.489449Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(14,4))\nsns.histplot(df['BrandName'], color='green')\nplt.xticks(rotation=90)\nplt.tight_layout()\nplt.legend()\nplt.grid()\nplt.title('Distribution of Cars Brand')","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:43.491533Z","iopub.execute_input":"2024-04-19T08:13:43.491814Z","iopub.status.idle":"2024-04-19T08:13:44.230938Z","shell.execute_reply.started":"2024-04-19T08:13:43.491788Z","shell.execute_reply":"2024-04-19T08:13:44.229784Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"We can see the Distribution of Maruti and Hyundai Cars having highest weightage. Indeed these are the most bought and selling cars in India!!","metadata":{}},{"cell_type":"code","source":"# df['Name'].str.split(' ').str[:1]  ** Imp**","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:44.232689Z","iopub.execute_input":"2024-04-19T08:13:44.233113Z","iopub.status.idle":"2024-04-19T08:13:44.237881Z","shell.execute_reply.started":"2024-04-19T08:13:44.233074Z","shell.execute_reply":"2024-04-19T08:13:44.236984Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"## Location\nplt.figure(figsize=(12,8))\nplt.subplot(1,2,1)\nlabel= list(df['Location'].unique())\nplt.pie(df['Location'].value_counts(), autopct='%.2f%%', labels=label)\nplt.legend()\nplt.title('Distribution of Cars Location Wise')\nplt.subplot(1,2,2)\n# plt.figure(figsize=(9,6))\nlabels= list(df['Year'].unique())\nplt.pie(df['Year'].value_counts(), autopct='%.2f%%', labels=labels, shadow=True)\nplt.legend()\nplt.title('Distribution of Cars Year Wise')","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:44.239064Z","iopub.execute_input":"2024-04-19T08:13:44.240065Z","iopub.status.idle":"2024-04-19T08:13:45.362942Z","shell.execute_reply.started":"2024-04-19T08:13:44.240035Z","shell.execute_reply":"2024-04-19T08:13:45.361778Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Above we can see the distribution of Cars LocationWise and YearWise.\n\n- Cars from Year Range of 2004-2010 have less weightage in comparison to later years.\n- Pune have the Highest Number of Used Cars and Ahmedabad have the Least Number of Used Cars Distribution.","metadata":{}},{"cell_type":"code","source":"##Fuel Type\nplt.figure(figsize=(12,4))\nplt.subplot(1,3,1)\nsns.histplot(df['Fuel_Type'])\nplt.title('Fuel Type Distribution of Cars')\nplt.subplot(1,3,2)\nsns.histplot(df['Transmission'], color='purple')\nplt.title('Transmission Distribution of Cars')\nplt.subplot(1,3,3)\nsns.histplot(df['Owner_Type'], color='grey')\nplt.xticks(rotation=90)\nplt.title('Owner Type Distribution of Cars')","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:45.364584Z","iopub.execute_input":"2024-04-19T08:13:45.365138Z","iopub.status.idle":"2024-04-19T08:13:46.109951Z","shell.execute_reply.started":"2024-04-19T08:13:45.365107Z","shell.execute_reply":"2024-04-19T08:13:46.108642Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"- So Here we found the Most of The Cars have mainly fuel_type of Diesel and Petrol.\n- The Transmission Type of available used cars is more Manual than Automatic.\n- Most Cars to Sell are First Owned Cars in our dataset distribution.","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(11,3))\n# plt.subplot(1,3,1)\nsns.histplot(df['Seats'])\nplt.title('Seats Distribution of Cars')","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:46.11162Z","iopub.execute_input":"2024-04-19T08:13:46.112066Z","iopub.status.idle":"2024-04-19T08:13:46.479359Z","shell.execute_reply.started":"2024-04-19T08:13:46.112025Z","shell.execute_reply":"2024-04-19T08:13:46.47846Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Most Cars are 5 Seater in our Dataset and Least Cars are 2 Seater. It tells us Most Used Cars are Family Owned Cars owned by most people. ","metadata":{}},{"cell_type":"markdown","source":"### Bivariate Data Analysis","metadata":{}},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:46.481808Z","iopub.execute_input":"2024-04-19T08:13:46.482238Z","iopub.status.idle":"2024-04-19T08:13:46.506286Z","shell.execute_reply.started":"2024-04-19T08:13:46.482198Z","shell.execute_reply":"2024-04-19T08:13:46.505312Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Co Relation of Features with Price Feature","metadata":{}},{"cell_type":"code","source":"## BrandName and Price\n\nplt.figure(figsize=(12,3))\nsns.barplot(x='BrandName',y='Price', data=df,ci=None)\nplt.xticks(rotation=90)\nplt.legend()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:46.508496Z","iopub.execute_input":"2024-04-19T08:13:46.509814Z","iopub.status.idle":"2024-04-19T08:13:47.053192Z","shell.execute_reply.started":"2024-04-19T08:13:46.509779Z","shell.execute_reply":"2024-04-19T08:13:47.052059Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"- Most Expensive Used Cars are either Jaguar, Mini or Porsche, Land and Audi.\n- Brand of Cars have Indeed effect in their selling Price.","metadata":{}},{"cell_type":"code","source":"## Location/YEar and Price\n\nplt.figure(figsize=(12,3))\nplt.subplot(1,2,1)\nsns.barplot(x='Location',y='Price', data=df,ci=None, palette='ocean')\nplt.xticks(rotation=90)\nplt.legend()\nplt.subplot(1,2,2)\nsns.barplot(x='Year',y='Price', data=df,ci=None, palette='autumn')\nplt.xticks(rotation=90)\nplt.legend()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:47.054579Z","iopub.execute_input":"2024-04-19T08:13:47.054898Z","iopub.status.idle":"2024-04-19T08:13:47.819498Z","shell.execute_reply.started":"2024-04-19T08:13:47.054871Z","shell.execute_reply":"2024-04-19T08:13:47.818601Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"- Most Expensive Cars are from Coimbatore followed by Bangalore and Kochi.\n- Kolkata and Jaipur have the most low budget available used Cars.\n- Year Distribution is simple with the Price of Cars. With the Increasing Year the Price of Cars is also Increasing.","metadata":{}},{"cell_type":"code","source":"## Fuel_Type and Seats With Price\n\nplt.figure(figsize=(12,4))\nplt.subplot(1,2,1)\nsns.lineplot(x='Fuel_Type', y='Price', data=df, marker='o',color='red')\n# plt.xticks(rotation=90)\nplt.grid()\nplt.subplot(1,2,2)\nsns.lineplot(x='Seats', y='Price', data=df, marker='o',color='green')\nplt.xticks(rotation=90)\nplt.grid()\n# plt.xlim(0,175000)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:47.820792Z","iopub.execute_input":"2024-04-19T08:13:47.821263Z","iopub.status.idle":"2024-04-19T08:13:48.761101Z","shell.execute_reply.started":"2024-04-19T08:13:47.821235Z","shell.execute_reply":"2024-04-19T08:13:48.759889Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"- Electric and Diesel Cars have higher Price and CNG/LPG Cars have lower Price.\n- 5 Seater Cars have low price while 2 Seater Cars have higher Price.","metadata":{}},{"cell_type":"code","source":"## Tranmission/Owner_Type and Price\n\nplt.figure(figsize=(12,3))\nplt.subplot(1,2,1)\nsns.barplot(x='Transmission',y='Price', data=df,ci=None, palette='ocean')\n# plt.xticks(rotation=90)\nplt.legend()\nplt.subplot(1,2,2)\nsns.barplot(x='Owner_Type',y='Price', data=df,ci=None, palette='autumn')\n# plt.xticks(rotation=90)\nplt.legend()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:48.7627Z","iopub.execute_input":"2024-04-19T08:13:48.76314Z","iopub.status.idle":"2024-04-19T08:13:49.19775Z","shell.execute_reply.started":"2024-04-19T08:13:48.763097Z","shell.execute_reply":"2024-04-19T08:13:49.196767Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"- Here we can see the Distribution of Transmission and Owner Type of Cars with Price of Cars.","metadata":{}},{"cell_type":"markdown","source":"#### Let's see our Continuous Numerical Features Relation With Each Other and with Price","metadata":{}},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:49.198895Z","iopub.execute_input":"2024-04-19T08:13:49.199197Z","iopub.status.idle":"2024-04-19T08:13:49.22127Z","shell.execute_reply.started":"2024-04-19T08:13:49.199171Z","shell.execute_reply":"2024-04-19T08:13:49.220136Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sns.pairplot(df[['Mileage','Power','Engine','Price','Kilometers_Driven']])","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:13:49.222772Z","iopub.execute_input":"2024-04-19T08:13:49.22318Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"- Here More the Mileage of Cars is less is the Price of Cars. Since more The Mileage of Cars is less is the Power and Engine of those Cars.\n- More Kms a Car is Driven, the less is the Price of Cars.\n- For Power and Engine there is not much clear Patter but we can notice less Power and Engine Cars have low Price and high Power and Engine Cars have high Price.","metadata":{}},{"cell_type":"code","source":"df1=df[['Mileage','Power','Engine','Price','Kilometers_Driven','Seats','Year']].corr()\nplt.figure(figsize=(9,5))\nsns.heatmap(df1, annot=True)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Findings:**\n\n- Mileage Have -ive Relation with Power, Engine , Price, Kilometers Driven, Seats.  More Mileage means less Other Cars factors.\n- Power and Engine are highly +ively corelated with Each other. More Power means Higher Engine.\n- Power and Engine are +ively corelated with Price also that we observe above also.\n- Power and Engine are -ively corelated with Year. Later Manufactured Cars have higher Power/Engine.\n- Kilometers Driven is -ively corelated with Year. Later Manufactured Cars will be less kms Driven.\n- Seats have high +ive corelation with Engine. Higher Engine Cars will have more number of Seats.","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(12,5))\nsns.lineplot(x='Location', y='Mileage', data=df, marker='*', hue='Year')\nplt.grid()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"- We can observer that more recent year Cars have better Mileage almost in all Locations except Bangalore.\n- Jaipur Location have the Highest Mileage Cars Since there are less expensive cars too there.\n- Coimbatore and Bangalore have Low Mileage Cars Since there are more expensive cars there(Higher Power/Engine).","metadata":{}},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:04.6978Z","iopub.execute_input":"2024-04-19T08:14:04.698134Z","iopub.status.idle":"2024-04-19T08:14:04.721092Z","shell.execute_reply.started":"2024-04-19T08:14:04.698103Z","shell.execute_reply":"2024-04-19T08:14:04.719793Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(12,5))\nsns.scatterplot(hue='Owner_Type', y='Mileage', data=df, marker='o', x='Fuel_Type')\nplt.grid()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:04.722705Z","iopub.execute_input":"2024-04-19T08:14:04.723346Z","iopub.status.idle":"2024-04-19T08:14:05.528868Z","shell.execute_reply.started":"2024-04-19T08:14:04.723297Z","shell.execute_reply":"2024-04-19T08:14:05.527752Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"- Most First and Second Hand Cars are of either Diesel or Petrol Fuel Type.\n- CNG Cars have the Highest Mileage.\n- The less Owned Used Cars(1st/2nd Hand) have better Mileage of those Cars. ","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(12,5))\nsns.scatterplot(hue='Owner_Type', y='Engine', data=df, marker='o', x='Year')\nplt.grid()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:05.530383Z","iopub.execute_input":"2024-04-19T08:14:05.531074Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"- For Engine, there's not specific pattern Year wise.\n- Mostly First and Second Hand Used Cars have Higher CC Engine.\n- Latest Year Cars are mostly First Hand Cars.","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(12,5))\nsns.barplot(hue='Transmission', y='Engine', data=df, x='Location', ci=None, palette='hls')\nplt.grid()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:06.7145Z","iopub.execute_input":"2024-04-19T08:14:06.714863Z","iopub.status.idle":"2024-04-19T08:14:07.312867Z","shell.execute_reply.started":"2024-04-19T08:14:06.71483Z","shell.execute_reply":"2024-04-19T08:14:07.311647Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"- Delhi have the Highest Engine Automatic Cars followed by Bangalore and Ahmedabad.\n- Coimbatore and Mumbai have Lowest Engine Automatic Cars.\n- Bangalore have the Highest Engine Manual Cars followed by Delhi and Mumbai.\n- Kolkata , Kochi and Jaipur have Lowest Engine Manual Transmission Cars.","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(12,5))\nsns.lineplot(hue='Seats', y='Engine', data=df, x='BrandName', marker='o', style='Seats',palette='pastel')\nplt.xticks(rotation=90)\n# for i, (xi, yi) in enumerate(zip(df['BrandName'], df['Engine'])):\n#     plt.annotate(f'({xi}, {yi})', (xi, yi), textcoords=\"offset points\", xytext=(0, 10), ha='center')\nplt.grid()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:07.31524Z","iopub.execute_input":"2024-04-19T08:14:07.315628Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"- With Better Engine of the Cars More is the Number of Seats in Cars.\n- Only Smart, Audi, Maruti Car Brand have 2 seater Cars.\n- Most Car Brands have 5 Seater Cars with Mid Range Engine followed by 7 Seater Cars with Higher Engine.","metadata":{}},{"cell_type":"code","source":"df[df['Seats']==2]","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:09.729989Z","iopub.execute_input":"2024-04-19T08:14:09.730334Z","iopub.status.idle":"2024-04-19T08:14:09.756452Z","shell.execute_reply.started":"2024-04-19T08:14:09.730304Z","shell.execute_reply":"2024-04-19T08:14:09.755337Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Skewness","metadata":{}},{"cell_type":"code","source":"dt=df.dtypes\nd_list=dt[(dt == 'int64') | (dt == 'float64')].index\nd_list=d_list.to_list()\nd_list\n# for i in d_list:\n#     sns.distplot(df[i], kde=True)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:09.758391Z","iopub.execute_input":"2024-04-19T08:14:09.758858Z","iopub.status.idle":"2024-04-19T08:14:09.76837Z","shell.execute_reply.started":"2024-04-19T08:14:09.758819Z","shell.execute_reply":"2024-04-19T08:14:09.767018Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(11,3))\nsns.distplot(df[d_list[0]], kde=True)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:09.788755Z","iopub.execute_input":"2024-04-19T08:14:09.789162Z","iopub.status.idle":"2024-04-19T08:14:10.233528Z","shell.execute_reply.started":"2024-04-19T08:14:09.78913Z","shell.execute_reply":"2024-04-19T08:14:10.23252Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(11,3))\nsns.distplot(df[d_list[1]], kde=True)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:10.234664Z","iopub.execute_input":"2024-04-19T08:14:10.234958Z","iopub.status.idle":"2024-04-19T08:14:10.675755Z","shell.execute_reply.started":"2024-04-19T08:14:10.234931Z","shell.execute_reply":"2024-04-19T08:14:10.674524Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(11,3))\nsns.distplot(df[d_list[2]], kde=True)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:10.677056Z","iopub.execute_input":"2024-04-19T08:14:10.677374Z","iopub.status.idle":"2024-04-19T08:14:11.132926Z","shell.execute_reply.started":"2024-04-19T08:14:10.677347Z","shell.execute_reply":"2024-04-19T08:14:11.131792Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(11,3))\nsns.distplot(df[d_list[3]], kde=True)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:11.134891Z","iopub.execute_input":"2024-04-19T08:14:11.135352Z","iopub.status.idle":"2024-04-19T08:14:11.545825Z","shell.execute_reply.started":"2024-04-19T08:14:11.13531Z","shell.execute_reply":"2024-04-19T08:14:11.544576Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(11,3))\nsns.distplot(df[d_list[4]], kde=True)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:11.547521Z","iopub.execute_input":"2024-04-19T08:14:11.547959Z","iopub.status.idle":"2024-04-19T08:14:11.992492Z","shell.execute_reply.started":"2024-04-19T08:14:11.547916Z","shell.execute_reply":"2024-04-19T08:14:11.991686Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(11,3))\nsns.distplot(df[d_list[5]], kde=True)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:11.993781Z","iopub.execute_input":"2024-04-19T08:14:11.994253Z","iopub.status.idle":"2024-04-19T08:14:12.4348Z","shell.execute_reply.started":"2024-04-19T08:14:11.994223Z","shell.execute_reply":"2024-04-19T08:14:12.433661Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(11,3))\nsns.distplot(df[d_list[6]], kde=True)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:12.436385Z","iopub.execute_input":"2024-04-19T08:14:12.436759Z","iopub.status.idle":"2024-04-19T08:14:12.894988Z","shell.execute_reply.started":"2024-04-19T08:14:12.436729Z","shell.execute_reply":"2024-04-19T08:14:12.893696Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"### Let's Apply Log Transformation for Price and Kilometers Driven Columns. Since there is Right Skewness in those Features Data.\n\ndef log_func(x):\n    for i in x:\n        df[i]=np.log(df[i])\n\nlog_func(['Kilometers_Driven', 'Price'])","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:12.896624Z","iopub.execute_input":"2024-04-19T08:14:12.897756Z","iopub.status.idle":"2024-04-19T08:14:12.905483Z","shell.execute_reply.started":"2024-04-19T08:14:12.897714Z","shell.execute_reply":"2024-04-19T08:14:12.904406Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:12.906962Z","iopub.execute_input":"2024-04-19T08:14:12.907851Z","iopub.status.idle":"2024-04-19T08:14:12.933213Z","shell.execute_reply.started":"2024-04-19T08:14:12.90781Z","shell.execute_reply":"2024-04-19T08:14:12.932303Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Feature Engineering","metadata":{}},{"cell_type":"markdown","source":"First we will convert our Categorical Features into Numerical features for Model Building ahead.","metadata":{}},{"cell_type":"code","source":"import warnings\nwarnings.filterwarnings('ignore')\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:12.934687Z","iopub.execute_input":"2024-04-19T08:14:12.935037Z","iopub.status.idle":"2024-04-19T08:14:12.960403Z","shell.execute_reply.started":"2024-04-19T08:14:12.935006Z","shell.execute_reply":"2024-04-19T08:14:12.959312Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"## For Name and Year I am performing Target Ordinal encoding\n\ndf1=df.groupby(['BrandName'])['Price'].mean().sort_values().index\ndf1","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:12.961892Z","iopub.execute_input":"2024-04-19T08:14:12.962205Z","iopub.status.idle":"2024-04-19T08:14:12.982411Z","shell.execute_reply.started":"2024-04-19T08:14:12.962177Z","shell.execute_reply":"2024-04-19T08:14:12.981257Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"enumerate(df1, 0) ##  We used enumerate here to give a index value to every df1 value. And with below for loop we have \n                     ## created a dictionary of index and values pair.\ndict={k:i for i, k in enumerate(df1,0)}\ndf['Name_R']=df['BrandName'].map(dict)\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:12.984172Z","iopub.execute_input":"2024-04-19T08:14:12.985556Z","iopub.status.idle":"2024-04-19T08:14:13.012769Z","shell.execute_reply.started":"2024-04-19T08:14:12.985446Z","shell.execute_reply":"2024-04-19T08:14:13.011685Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.drop(['Name'], inplace=True, axis=1)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:13.014404Z","iopub.execute_input":"2024-04-19T08:14:13.014832Z","iopub.status.idle":"2024-04-19T08:14:13.021211Z","shell.execute_reply.started":"2024-04-19T08:14:13.014795Z","shell.execute_reply":"2024-04-19T08:14:13.020411Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"##Location  -- Performing One Hot Encoding\n\ndf['Location'].unique()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:13.02239Z","iopub.execute_input":"2024-04-19T08:14:13.022715Z","iopub.status.idle":"2024-04-19T08:14:13.035944Z","shell.execute_reply.started":"2024-04-19T08:14:13.022687Z","shell.execute_reply":"2024-04-19T08:14:13.0349Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"pd.get_dummies(df['Location'], drop_first=True, dtype=float).columns\ndf[['Bangalore', 'Chennai', 'Coimbatore', 'Delhi', 'Hyderabad', 'Jaipur','Kochi', 'Kolkata', 'Mumbai', 'Pune']] = pd.get_dummies(df['Location'], drop_first=True, dtype=float)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:13.03727Z","iopub.execute_input":"2024-04-19T08:14:13.037598Z","iopub.status.idle":"2024-04-19T08:14:13.054926Z","shell.execute_reply.started":"2024-04-19T08:14:13.03757Z","shell.execute_reply":"2024-04-19T08:14:13.053738Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"## Year  --- Performing Target Guided Ordinal Encoding\n\ndf1= df.groupby(['Year'])['Price'].mean().sort_values().index\ndf1\ndict= {i:k for k,i in enumerate(df1,1)}\ndf['Year_R']=df['Year'].map(dict)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:13.05588Z","iopub.execute_input":"2024-04-19T08:14:13.056177Z","iopub.status.idle":"2024-04-19T08:14:13.066691Z","shell.execute_reply.started":"2024-04-19T08:14:13.05615Z","shell.execute_reply":"2024-04-19T08:14:13.065367Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Fuel_Type'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:13.068696Z","iopub.execute_input":"2024-04-19T08:14:13.069042Z","iopub.status.idle":"2024-04-19T08:14:13.082534Z","shell.execute_reply.started":"2024-04-19T08:14:13.069012Z","shell.execute_reply":"2024-04-19T08:14:13.081398Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Owner_Type'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:13.084211Z","iopub.execute_input":"2024-04-19T08:14:13.084878Z","iopub.status.idle":"2024-04-19T08:14:13.098363Z","shell.execute_reply.started":"2024-04-19T08:14:13.084846Z","shell.execute_reply":"2024-04-19T08:14:13.096771Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"### let's do One-Hot encoding for Fuel-Type, Owner-Type, Transmission Type of Cars.","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:13.100541Z","iopub.execute_input":"2024-04-19T08:14:13.101557Z","iopub.status.idle":"2024-04-19T08:14:13.109335Z","shell.execute_reply.started":"2024-04-19T08:14:13.101514Z","shell.execute_reply":"2024-04-19T08:14:13.108134Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"## Fuel Type\n\nl= np.unique(df['Fuel_Type'])\nl\ndf[l[1:]]=pd.get_dummies(df['Fuel_Type'], drop_first=True, dtype=float)\ndf","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:13.110376Z","iopub.execute_input":"2024-04-19T08:14:13.110771Z","iopub.status.idle":"2024-04-19T08:14:13.187874Z","shell.execute_reply.started":"2024-04-19T08:14:13.11073Z","shell.execute_reply":"2024-04-19T08:14:13.186525Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Owner Type\n\nl=np.unique(df['Owner_Type'])\nl[1:]\ndf[l[1:]]=pd.get_dummies(df['Owner_Type'], drop_first=True, dtype=float)\n","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:13.191714Z","iopub.execute_input":"2024-04-19T08:14:13.19228Z","iopub.status.idle":"2024-04-19T08:14:13.208036Z","shell.execute_reply.started":"2024-04-19T08:14:13.192236Z","shell.execute_reply":"2024-04-19T08:14:13.20676Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"## Transmission\n\ndf['Manual']=pd.get_dummies(df['Transmission'], drop_first=True, dtype=float)\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:13.209936Z","iopub.execute_input":"2024-04-19T08:14:13.210332Z","iopub.status.idle":"2024-04-19T08:14:13.248994Z","shell.execute_reply.started":"2024-04-19T08:14:13.210298Z","shell.execute_reply":"2024-04-19T08:14:13.247757Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"## Seats -- Lets do One Hot Encoding for Seats\n\npd.get_dummies(df['Seats'], drop_first=True, dtype=float)\ndf[['4','5','6','7','8']]=pd.get_dummies(df['Seats'], drop_first=True, dtype=float)\ndf.head()\n","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:13.250633Z","iopub.execute_input":"2024-04-19T08:14:13.251059Z","iopub.status.idle":"2024-04-19T08:14:13.290579Z","shell.execute_reply.started":"2024-04-19T08:14:13.251021Z","shell.execute_reply":"2024-04-19T08:14:13.289414Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"## Let's drop the Categorical Columns Now\n\ndf.drop(['BrandName', 'Location','Year','Fuel_Type','Transmission','Owner_Type','Seats'], inplace=True, axis=1)\ndf.columns","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:13.292072Z","iopub.execute_input":"2024-04-19T08:14:13.292392Z","iopub.status.idle":"2024-04-19T08:14:13.302616Z","shell.execute_reply.started":"2024-04-19T08:14:13.292364Z","shell.execute_reply":"2024-04-19T08:14:13.301538Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Independent and Dependent Features","metadata":{}},{"cell_type":"code","source":"x=df.drop('Price',axis=1)\ny=df['Price']","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:13.303903Z","iopub.execute_input":"2024-04-19T08:14:13.304212Z","iopub.status.idle":"2024-04-19T08:14:13.312865Z","shell.execute_reply.started":"2024-04-19T08:14:13.304186Z","shell.execute_reply":"2024-04-19T08:14:13.311568Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y.shape","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:13.314262Z","iopub.execute_input":"2024-04-19T08:14:13.314659Z","iopub.status.idle":"2024-04-19T08:14:13.323523Z","shell.execute_reply.started":"2024-04-19T08:14:13.314625Z","shell.execute_reply":"2024-04-19T08:14:13.322524Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Train Test Split","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nx_train,  x_test, y_train, y_test= train_test_split(x,y,test_size=0.25, random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:13.324736Z","iopub.execute_input":"2024-04-19T08:14:13.325229Z","iopub.status.idle":"2024-04-19T08:14:13.61894Z","shell.execute_reply.started":"2024-04-19T08:14:13.3252Z","shell.execute_reply":"2024-04-19T08:14:13.617706Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"x_train.shape, x_test.shape","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:13.622336Z","iopub.execute_input":"2024-04-19T08:14:13.623228Z","iopub.status.idle":"2024-04-19T08:14:13.630512Z","shell.execute_reply.started":"2024-04-19T08:14:13.623193Z","shell.execute_reply":"2024-04-19T08:14:13.62945Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Now we have our train and test data. Let's do Feature Selection in our Train and Test Data to Optimize our Model.","metadata":{}},{"cell_type":"markdown","source":"## Feature Selection","metadata":{}},{"cell_type":"code","source":"from sklearn.ensemble import ExtraTreesRegressor\nmodel=ExtraTreesRegressor()\nmodel.fit(x,y)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:13.632016Z","iopub.execute_input":"2024-04-19T08:14:13.632676Z","iopub.status.idle":"2024-04-19T08:14:16.72514Z","shell.execute_reply.started":"2024-04-19T08:14:13.632637Z","shell.execute_reply":"2024-04-19T08:14:16.723981Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(model.feature_importances_)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:16.726455Z","iopub.execute_input":"2024-04-19T08:14:16.726971Z","iopub.status.idle":"2024-04-19T08:14:16.756964Z","shell.execute_reply.started":"2024-04-19T08:14:16.726941Z","shell.execute_reply":"2024-04-19T08:14:16.756053Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"imp=pd.Series(model.feature_importances_, index=x.columns)\nimp.sort_values().plot(kind='bar')","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:16.758316Z","iopub.execute_input":"2024-04-19T08:14:16.758853Z","iopub.status.idle":"2024-04-19T08:14:17.274259Z","shell.execute_reply.started":"2024-04-19T08:14:16.758816Z","shell.execute_reply":"2024-04-19T08:14:17.273037Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"imp.sort_values()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:17.275916Z","iopub.execute_input":"2024-04-19T08:14:17.276292Z","iopub.status.idle":"2024-04-19T08:14:17.286065Z","shell.execute_reply.started":"2024-04-19T08:14:17.276261Z","shell.execute_reply":"2024-04-19T08:14:17.284785Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# ## Drop the Least important Features\n\nx_train.drop(['Electric','LPG','Fourth & Above','6'], axis=1, inplace=True)\nx_test.drop(['Electric','LPG','Fourth & Above','6'], axis=1, inplace=True)\nx_test.shape, x_train.shape","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:17.287651Z","iopub.execute_input":"2024-04-19T08:14:17.288114Z","iopub.status.idle":"2024-04-19T08:14:17.305272Z","shell.execute_reply.started":"2024-04-19T08:14:17.288075Z","shell.execute_reply":"2024-04-19T08:14:17.303831Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"x_train.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:17.306706Z","iopub.execute_input":"2024-04-19T08:14:17.307334Z","iopub.status.idle":"2024-04-19T08:14:17.344584Z","shell.execute_reply.started":"2024-04-19T08:14:17.307299Z","shell.execute_reply":"2024-04-19T08:14:17.343413Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Feature Scaling/Standardization","metadata":{}},{"cell_type":"code","source":"\nfrom sklearn.preprocessing import StandardScaler\nscaler= StandardScaler()\nx_train_scale= scaler.fit_transform(x_train) ## -- we apply fit transform to xtrain because we want prediction acc to our train data mainly.\nx_test_scale= scaler.transform(x_test)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:17.346017Z","iopub.execute_input":"2024-04-19T08:14:17.346324Z","iopub.status.idle":"2024-04-19T08:14:17.362863Z","shell.execute_reply.started":"2024-04-19T08:14:17.346292Z","shell.execute_reply":"2024-04-19T08:14:17.361547Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sns.boxplot(x_train_scale)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:17.364786Z","iopub.execute_input":"2024-04-19T08:14:17.365112Z","iopub.status.idle":"2024-04-19T08:14:18.266445Z","shell.execute_reply.started":"2024-04-19T08:14:17.365086Z","shell.execute_reply":"2024-04-19T08:14:18.265312Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Model Building with Linear Regression","metadata":{}},{"cell_type":"markdown","source":"Here we will create our model with train data and Predict our test data with the model created.","metadata":{}},{"cell_type":"code","source":"from sklearn.linear_model import LinearRegression\nlinreg= LinearRegression()\nlinreg.fit(x_train_scale, y_train)\ny_pred= linreg.predict(x_test_scale)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:18.267959Z","iopub.execute_input":"2024-04-19T08:14:18.268273Z","iopub.status.idle":"2024-04-19T08:14:18.315981Z","shell.execute_reply.started":"2024-04-19T08:14:18.268246Z","shell.execute_reply":"2024-04-19T08:14:18.313133Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\ndef performance_func(y_pred, y_test):\n    mse= mean_squared_error(y_test, y_pred)\n    mae= mean_absolute_error(y_test, y_pred)\n    r2= r2_score(y_test, y_pred)\n    # residuals= y_test-y_pred\n    plt.scatter(y_test, y_pred)\n    plt.xlabel('y_test')\n    plt.ylabel('y_pred')\n    # sns.displot(residuals, kind='kde')\n    rmse=np.sqrt(mse)\n    print('mse',mse)\n    print('mae',mae)\n    print('r2',r2)\n    print('rmse', rmse)\n    ","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:18.320405Z","iopub.execute_input":"2024-04-19T08:14:18.321063Z","iopub.status.idle":"2024-04-19T08:14:18.352683Z","shell.execute_reply.started":"2024-04-19T08:14:18.321014Z","shell.execute_reply":"2024-04-19T08:14:18.351059Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Now Let's see the Performance of Our Created Model. If we are getting right Performance and Graph for our target's test data and target's Predicted data.","metadata":{}},{"cell_type":"code","source":"performance_func(y_pred, y_test)  ","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:18.356154Z","iopub.execute_input":"2024-04-19T08:14:18.358028Z","iopub.status.idle":"2024-04-19T08:14:18.696756Z","shell.execute_reply.started":"2024-04-19T08:14:18.357972Z","shell.execute_reply":"2024-04-19T08:14:18.695268Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**So we can see The good Metrics Score for our Linear Regression Model:**\n\n- **MSE (Mean Squared Error):** 0.2285 is a relatively low value, indicating that the average squared difference between the predicted values (y_pred) and the actual values (y_test) is small.\n- **MAE (Mean Absolute Error):** 0.3139 is also a low value, suggesting that the average absolute difference between predicted and actual values is relatively small.\n- **R² (R-squared):** 0.6343 is a moderate to high R-squared value, indicating that there's a reasonably good correlation between the predicted and actual values.\n- **RMSE (Root Mean Squared Error):** 0.4780 is again a relatively low value, and since it's the square root of MSE, it reflects a similar trend of small prediction errors.765","metadata":{}},{"cell_type":"raw","source":"### Model with Lasso Regression CV","metadata":{}},{"cell_type":"code","source":"from sklearn.linear_model import LassoCV\nlassocv=LassoCV()\nlassocv.fit(x_train_scale, y_train)\ny_pred= lassocv.predict(x_test_scale)\nperformance_func(y_pred, y_test)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:18.698421Z","iopub.execute_input":"2024-04-19T08:14:18.698976Z","iopub.status.idle":"2024-04-19T08:14:19.384601Z","shell.execute_reply.started":"2024-04-19T08:14:18.698927Z","shell.execute_reply":"2024-04-19T08:14:19.38342Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**I checked with LassoCV Prediction Model too. But I am getting better metrics scores and graph with Linear Regression Model. So I will go with Linear Regression Model**","metadata":{}},{"cell_type":"markdown","source":"## OLS Linear Regression","metadata":{}},{"cell_type":"code","source":"import statsmodels.api as sm\nmodel=sm.OLS(y_train,x_train_scale).fit()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:37.260827Z","iopub.execute_input":"2024-04-19T08:14:37.261231Z","iopub.status.idle":"2024-04-19T08:14:37.287998Z","shell.execute_reply.started":"2024-04-19T08:14:37.261201Z","shell.execute_reply":"2024-04-19T08:14:37.285716Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model.summary()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:42.143154Z","iopub.execute_input":"2024-04-19T08:14:42.143581Z","iopub.status.idle":"2024-04-19T08:14:42.284262Z","shell.execute_reply.started":"2024-04-19T08:14:42.14355Z","shell.execute_reply":"2024-04-19T08:14:42.283386Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(linreg.coef_)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T08:14:47.520343Z","iopub.execute_input":"2024-04-19T08:14:47.520744Z","iopub.status.idle":"2024-04-19T08:14:47.52701Z","shell.execute_reply.started":"2024-04-19T08:14:47.520713Z","shell.execute_reply":"2024-04-19T08:14:47.525751Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**We can see our corefficient values of Linear Regression Prediction Model and OLS Regression Results coefficient values are Approximately the same.\nSo we can conclude that our model is a decent prediction model for Predicting Price Values from Other Independent Feature Values in the DataSet.**","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}